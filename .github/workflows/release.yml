name: Release and Publish

on:
  push:
    tags:
      - 'typecmd-v*'  # Triggers on tags like typecmd-v0.0.3
  workflow_dispatch:  # Allows manual triggering
    inputs:
      package:
        description: 'Package to release (typecmd)'
        required: true
        default: 'typecmd'
        type: choice
        options:
          - typecmd
      version:
        description: 'Version to release'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun run test

      - name: Run linting
        run: bun run lint

      - name: Type check
        run: bun run check-types

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build typecmd
        run: |
          cd packages/typecmd
          bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: typecmd-build
          path: packages/typecmd/dist/

  publish-npm:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: typecmd-build
          path: packages/typecmd/dist/

      - name: Publish to NPM
        run: |
          cd packages/typecmd
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-github:
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: typecmd-build
          path: packages/typecmd/dist/

      - name: Configure package for GitHub
        run: |
          cd packages/typecmd
          # Temporarily modify package.json for GitHub packages
          bun run -e "
            const pkg = require('./package.json');
            pkg.name = '@selfmail/typecmd';
            pkg.publishConfig = { registry: 'https://npm.pkg.github.com' };
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Publish to GitHub Packages
        run: |
          cd packages/typecmd
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: [publish-npm, publish-github]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/typecmd-v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/typecmd-v}
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          cd packages/typecmd
          echo "## What's Changed" > changelog.md
          echo "" >> changelog.md
          # Get commits since last tag
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")..HEAD -- . >> changelog.md || echo "- Initial release" >> changelog.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: typecmd-v${{ steps.version.outputs.version }}
          release_name: typecmd v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
